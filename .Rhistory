directory = "~/Documents/escuela/phd/size_fractions/"
infile = "distance_matrix_5m16s.tsv"
outfile = "PCoA-plt5m16s.png"
# Load the distance matrix
# Assuming the distance matrix is saved in a file named "distance_matrix.tsv"
matrix_data <- read.table(paste(directory,infile,sep = ""), header = TRUE, sep = "\t", row.names = 1, check.names = FALSE)
# Convert the matrix data to a 'dist' object
dist_matrix <- as.dist(matrix_data)
# Perform a Principal Coordinates Analysis (PCoA)
pcoa_result <- pcoa(dist_matrix)
# Compute variance percentages
total_variance <- sum(pcoa_result$values$Eigenvalues)
var1 <- round((pcoa_result$values$Eigenvalues[1] / total_variance) * 100, 2)
var2 <- round((pcoa_result$values$Eigenvalues[2] / total_variance) * 100, 2)
xvalues <- seq(from = floor(min(pcoa_result$vectors[,1])),
to = ceiling(max(pcoa_result$vectors[,1])),
by = 0.2)
yvalues <- seq(from = floor(min(pcoa_result$vectors[,2])),
to = ceiling(max(pcoa_result$vectors[,2])),
by = 0.2)
png(filename = paste(directory,outfile,".png",sep=""))
old_mar <- par("mar")
par(mar = c(old_mar[1], 6, old_mar[3], old_mar[4]))  # Increase the left margin
# Plot the first two PCoA axes with modified settings
plot(pcoa_result$vectors[,1], pcoa_result$vectors[,2],
xlab = paste("PCo1 (", var1, "%)", sep = ""),
ylab = paste("PCo2 (", var2, "%)", sep = ""),
type = "n", # Set up the plotting area
cex.lab = 1.8,
cex.axis = 1.4,
xaxp = c(floor(min(pcoa_result$vectors[,1])), ceiling(max(pcoa_result$vectors[,1])),
(ceiling(max(pcoa_result$vectors[,1])) - floor(min(pcoa_result$vectors[,1]))) / 0.2),
yaxp = c(floor(min(pcoa_result$vectors[,2])), ceiling(max(pcoa_result$vectors[,2])),
(ceiling(max(pcoa_result$vectors[,2])) - floor(min(pcoa_result$vectors[,2]))) / 0.2))
# Add gridlines
abline(h = yvalues, col = "gray", lty = "dotted")
abline(v = xvalues, col = "gray", lty = "dotted")
type_colors = c("#4477AA","#EE7733","#BBBBBB", "black")
# Add points based on the ending character of labels
colors <- ifelse(grepl("BS$", rownames(pcoa_result$vectors)), type_colors[1],
ifelse(grepl("BL$", rownames(pcoa_result$vectors)), type_colors[2],
ifelse(grepl("BSL", rownames(pcoa_result$vectors)), type_colors[3], "black"))) # "black" as a default, just in case
points(pcoa_result$vectors[,1], pcoa_result$vectors[,2], pch = 21, bg = colors, cex = 1.6)
# Add a legend with circle markers
legend("topright",
legend = c("Small", "Large", "DeFr", "Whole"),
col = type_colors,
pt.bg = type_colors,  # fill color
pch = 21,
cex = 1.6)
dev.off()
# Let's do the PERMANOVA
dist_matrix_rownames <- labels(dist_matrix)
group_labels <- ifelse(grepl("BS$", dist_matrix_rownames), "Small",
ifelse(grepl("BL", dist_matrix_rownames), "Large",
ifelse(grepl("BSL", dist_matrix_rownames), "DeFr", "Whole")))
permanova_result <- adonis2(as.matrix(dist_matrix) ~ group_labels,
permutations = 999)
print(permanova_result)
# Make sure the labels are in a data frame
df_group_labels <- data.frame(group_labels)
# Run pairwise tests
posthoc_results <- pairwise.adonis(dist_matrix, df_group_labels$group_label, p.adjust.m = 'fdr')
print(posthoc_results)
directory = "~/Documents/escuela/phd/size_fractions/"
infile = "distance_matrix_5m18s.tsv"
outfile = "PCoA-plt5m18s.png"
# Load the distance matrix
# Assuming the distance matrix is saved in a file named "distance_matrix.tsv"
matrix_data <- read.table(paste(directory,infile,sep = ""), header = TRUE, sep = "\t", row.names = 1, check.names = FALSE)
# Convert the matrix data to a 'dist' object
dist_matrix <- as.dist(matrix_data)
# Perform a Principal Coordinates Analysis (PCoA)
pcoa_result <- pcoa(dist_matrix)
# Compute variance percentages
total_variance <- sum(pcoa_result$values$Eigenvalues)
var1 <- round((pcoa_result$values$Eigenvalues[1] / total_variance) * 100, 2)
var2 <- round((pcoa_result$values$Eigenvalues[2] / total_variance) * 100, 2)
xvalues <- seq(from = floor(min(pcoa_result$vectors[,1])),
to = ceiling(max(pcoa_result$vectors[,1])),
by = 0.2)
yvalues <- seq(from = floor(min(pcoa_result$vectors[,2])),
to = ceiling(max(pcoa_result$vectors[,2])),
by = 0.2)
png(filename = paste(directory,outfile,".png",sep=""))
old_mar <- par("mar")
par(mar = c(old_mar[1], 6, old_mar[3], old_mar[4]))  # Increase the left margin
# Plot the first two PCoA axes with modified settings
plot(pcoa_result$vectors[,1], pcoa_result$vectors[,2],
xlab = paste("PCo1 (", var1, "%)", sep = ""),
ylab = paste("PCo2 (", var2, "%)", sep = ""),
type = "n", # Set up the plotting area
cex.lab = 1.8,
cex.axis = 1.4,
xaxp = c(floor(min(pcoa_result$vectors[,1])), ceiling(max(pcoa_result$vectors[,1])),
(ceiling(max(pcoa_result$vectors[,1])) - floor(min(pcoa_result$vectors[,1]))) / 0.2),
yaxp = c(floor(min(pcoa_result$vectors[,2])), ceiling(max(pcoa_result$vectors[,2])),
(ceiling(max(pcoa_result$vectors[,2])) - floor(min(pcoa_result$vectors[,2]))) / 0.2))
# Add gridlines
abline(h = yvalues, col = "gray", lty = "dotted")
abline(v = xvalues, col = "gray", lty = "dotted")
type_colors = c("#4477AA","#EE7733","#BBBBBB", "black")
# Add points based on the ending character of labels
colors <- ifelse(grepl("BS$", rownames(pcoa_result$vectors)), type_colors[1],
ifelse(grepl("BL$", rownames(pcoa_result$vectors)), type_colors[2],
ifelse(grepl("BSL", rownames(pcoa_result$vectors)), type_colors[3], "black"))) # "black" as a default, just in case
points(pcoa_result$vectors[,1], pcoa_result$vectors[,2], pch = 21, bg = colors, cex = 1.6)
# Add a legend with circle markers
legend("topright",
legend = c("Small", "Large", "DeFr", "Whole"),
col = type_colors,
pt.bg = type_colors,  # fill color
pch = 21,
cex = 1.6)
dev.off()
# Let's do the PERMANOVA
dist_matrix_rownames <- labels(dist_matrix)
group_labels <- ifelse(grepl("BS$", dist_matrix_rownames), "Small",
ifelse(grepl("BL", dist_matrix_rownames), "Large",
ifelse(grepl("BSL", dist_matrix_rownames), "DeFr", "Whole")))
permanova_result <- adonis2(as.matrix(dist_matrix) ~ group_labels,
permutations = 999)
print(permanova_result)
# Make sure the labels are in a data frame
df_group_labels <- data.frame(group_labels)
# Run pairwise tests
posthoc_results <- pairwise.adonis(dist_matrix, df_group_labels$group_label, p.adjust.m = 'fdr')
print(posthoc_results)
directory = "~/Documents/escuela/phd/size_fractions/"
infile = "distance_matrix_10m18s.tsv"
outfile = "PCoA-plt10m18s.png"
# Load the distance matrix
# Assuming the distance matrix is saved in a file named "distance_matrix.tsv"
matrix_data <- read.table(paste(directory,infile,sep = ""), header = TRUE, sep = "\t", row.names = 1, check.names = FALSE)
# Convert the matrix data to a 'dist' object
dist_matrix <- as.dist(matrix_data)
# Perform a Principal Coordinates Analysis (PCoA)
pcoa_result <- pcoa(dist_matrix)
# Compute variance percentages
total_variance <- sum(pcoa_result$values$Eigenvalues)
var1 <- round((pcoa_result$values$Eigenvalues[1] / total_variance) * 100, 2)
var2 <- round((pcoa_result$values$Eigenvalues[2] / total_variance) * 100, 2)
xvalues <- seq(from = floor(min(pcoa_result$vectors[,1])),
to = ceiling(max(pcoa_result$vectors[,1])),
by = 0.2)
yvalues <- seq(from = floor(min(pcoa_result$vectors[,2])),
to = ceiling(max(pcoa_result$vectors[,2])),
by = 0.2)
png(filename = paste(directory,outfile,".png",sep=""))
old_mar <- par("mar")
par(mar = c(old_mar[1], 6, old_mar[3], old_mar[4]))  # Increase the left margin
# Plot the first two PCoA axes with modified settings
plot(pcoa_result$vectors[,1], pcoa_result$vectors[,2],
xlab = paste("PCo1 (", var1, "%)", sep = ""),
ylab = paste("PCo2 (", var2, "%)", sep = ""),
type = "n", # Set up the plotting area
cex.lab = 1.8,
cex.axis = 1.4,
xaxp = c(floor(min(pcoa_result$vectors[,1])), ceiling(max(pcoa_result$vectors[,1])),
(ceiling(max(pcoa_result$vectors[,1])) - floor(min(pcoa_result$vectors[,1]))) / 0.2),
yaxp = c(floor(min(pcoa_result$vectors[,2])), ceiling(max(pcoa_result$vectors[,2])),
(ceiling(max(pcoa_result$vectors[,2])) - floor(min(pcoa_result$vectors[,2]))) / 0.2))
# Add gridlines
abline(h = yvalues, col = "gray", lty = "dotted")
abline(v = xvalues, col = "gray", lty = "dotted")
type_colors = c("#4477AA","#EE7733","#BBBBBB", "black")
# Add points based on the ending character of labels
colors <- ifelse(grepl("CS$", rownames(pcoa_result$vectors)), type_colors[1],
ifelse(grepl("CL$", rownames(pcoa_result$vectors)), type_colors[2],
ifelse(grepl("CSL", rownames(pcoa_result$vectors)), type_colors[3], "black"))) # "black" as a default, just in case
points(pcoa_result$vectors[,1], pcoa_result$vectors[,2], pch = 21, bg = colors, cex = 1.6)
# Add a legend with circle markers
legend("topright",
legend = c("Small", "Large", "DeFr", "Whole"),
col = type_colors,
pt.bg = type_colors,  # fill color
pch = 21,
cex = 1.6)
dev.off()
# Let's do the PERMANOVA
dist_matrix_rownames <- labels(dist_matrix)
group_labels <- ifelse(grepl("CS$", dist_matrix_rownames), "Small",
ifelse(grepl("CL", dist_matrix_rownames), "Large",
ifelse(grepl("CSL", dist_matrix_rownames), "DeFr", "Whole")))
permanova_result <- adonis2(as.matrix(dist_matrix) ~ group_labels,
permutations = 999)
print(permanova_result)
# Make sure the labels are in a data frame
df_group_labels <- data.frame(group_labels)
# Run pairwise tests
posthoc_results <- pairwise.adonis(dist_matrix, df_group_labels$group_label, p.adjust.m = 'fdr')
print(posthoc_results)
directory = "~/Documents/escuela/phd/size_fractions/"
infile = "distance_matrix_10m16s.tsv"
outfile = "PCoA-plt10m16s.png"
# Load the distance matrix
# Assuming the distance matrix is saved in a file named "distance_matrix.tsv"
matrix_data <- read.table(paste(directory,infile,sep = ""), header = TRUE, sep = "\t", row.names = 1, check.names = FALSE)
# Convert the matrix data to a 'dist' object
dist_matrix <- as.dist(matrix_data)
# Perform a Principal Coordinates Analysis (PCoA)
pcoa_result <- pcoa(dist_matrix)
# Compute variance percentages
total_variance <- sum(pcoa_result$values$Eigenvalues)
var1 <- round((pcoa_result$values$Eigenvalues[1] / total_variance) * 100, 2)
var2 <- round((pcoa_result$values$Eigenvalues[2] / total_variance) * 100, 2)
xvalues <- seq(from = floor(min(pcoa_result$vectors[,1])),
to = ceiling(max(pcoa_result$vectors[,1])),
by = 0.2)
yvalues <- seq(from = floor(min(pcoa_result$vectors[,2])),
to = ceiling(max(pcoa_result$vectors[,2])),
by = 0.2)
png(filename = paste(directory,outfile,".png",sep=""))
old_mar <- par("mar")
par(mar = c(old_mar[1], 6, old_mar[3], old_mar[4]))  # Increase the left margin
# Plot the first two PCoA axes with modified settings
plot(pcoa_result$vectors[,1], pcoa_result$vectors[,2],
xlab = paste("PCo1 (", var1, "%)", sep = ""),
ylab = paste("PCo2 (", var2, "%)", sep = ""),
type = "n", # Set up the plotting area
cex.lab = 1.8,
cex.axis = 1.4,
xaxp = c(floor(min(pcoa_result$vectors[,1])), ceiling(max(pcoa_result$vectors[,1])),
(ceiling(max(pcoa_result$vectors[,1])) - floor(min(pcoa_result$vectors[,1]))) / 0.2),
yaxp = c(floor(min(pcoa_result$vectors[,2])), ceiling(max(pcoa_result$vectors[,2])),
(ceiling(max(pcoa_result$vectors[,2])) - floor(min(pcoa_result$vectors[,2]))) / 0.2))
# Add gridlines
abline(h = yvalues, col = "gray", lty = "dotted")
abline(v = xvalues, col = "gray", lty = "dotted")
type_colors = c("#4477AA","#EE7733","#BBBBBB", "black")
# Add points based on the ending character of labels
colors <- ifelse(grepl("CS$", rownames(pcoa_result$vectors)), type_colors[1],
ifelse(grepl("CL$", rownames(pcoa_result$vectors)), type_colors[2],
ifelse(grepl("CSL", rownames(pcoa_result$vectors)), type_colors[3], "black"))) # "black" as a default, just in case
points(pcoa_result$vectors[,1], pcoa_result$vectors[,2], pch = 21, bg = colors, cex = 1.6)
# Add a legend with circle markers
legend("topright",
legend = c("Small", "Large", "DeFr", "Whole"),
col = type_colors,
pt.bg = type_colors,  # fill color
pch = 21,
cex = 1.6)
dev.off()
# Let's do the PERMANOVA
dist_matrix_rownames <- labels(dist_matrix)
group_labels <- ifelse(grepl("CS$", dist_matrix_rownames), "Small",
ifelse(grepl("CL", dist_matrix_rownames), "Large",
ifelse(grepl("CSL", dist_matrix_rownames), "DeFr", "Whole")))
permanova_result <- adonis2(as.matrix(dist_matrix) ~ group_labels,
permutations = 999)
print(permanova_result)
# Make sure the labels are in a data frame
df_group_labels <- data.frame(group_labels)
# Run pairwise tests
posthoc_results <- pairwise.adonis(dist_matrix, df_group_labels$group_label, p.adjust.m = 'fdr')
print(posthoc_results)
directory = "~/Documents/escuela/phd/size_fractions/"
infile = "distance_matrix_30m16s.tsv"
outfile = "PCoA-plt30m16s.png"
# Load the distance matrix
# Assuming the distance matrix is saved in a file named "distance_matrix.tsv"
matrix_data <- read.table(paste(directory,infile,sep = ""), header = TRUE, sep = "\t", row.names = 1, check.names = FALSE)
# Convert the matrix data to a 'dist' object
dist_matrix <- as.dist(matrix_data)
# Perform a Principal Coordinates Analysis (PCoA)
pcoa_result <- pcoa(dist_matrix)
# Compute variance percentages
total_variance <- sum(pcoa_result$values$Eigenvalues)
var1 <- round((pcoa_result$values$Eigenvalues[1] / total_variance) * 100, 2)
var2 <- round((pcoa_result$values$Eigenvalues[2] / total_variance) * 100, 2)
xvalues <- seq(from = floor(min(pcoa_result$vectors[,1])),
to = ceiling(max(pcoa_result$vectors[,1])),
by = 0.2)
yvalues <- seq(from = floor(min(pcoa_result$vectors[,2])),
to = ceiling(max(pcoa_result$vectors[,2])),
by = 0.2)
png(filename = paste(directory,outfile,".png",sep=""))
old_mar <- par("mar")
par(mar = c(old_mar[1], 6, old_mar[3], old_mar[4]))  # Increase the left margin
# Plot the first two PCoA axes with modified settings
plot(pcoa_result$vectors[,1], pcoa_result$vectors[,2],
xlab = paste("PCo1 (", var1, "%)", sep = ""),
ylab = paste("PCo2 (", var2, "%)", sep = ""),
type = "n", # Set up the plotting area
cex.lab = 1.8,
cex.axis = 1.4,
xaxp = c(floor(min(pcoa_result$vectors[,1])), ceiling(max(pcoa_result$vectors[,1])),
(ceiling(max(pcoa_result$vectors[,1])) - floor(min(pcoa_result$vectors[,1]))) / 0.2),
yaxp = c(floor(min(pcoa_result$vectors[,2])), ceiling(max(pcoa_result$vectors[,2])),
(ceiling(max(pcoa_result$vectors[,2])) - floor(min(pcoa_result$vectors[,2]))) / 0.2))
# Add gridlines
abline(h = yvalues, col = "gray", lty = "dotted")
abline(v = xvalues, col = "gray", lty = "dotted")
type_colors = c("#4477AA","#EE7733","#BBBBBB", "black")
# Add points based on the ending character of labels
colors <- ifelse(grepl("ES$", rownames(pcoa_result$vectors)), type_colors[1],
ifelse(grepl("EL$", rownames(pcoa_result$vectors)), type_colors[2],
ifelse(grepl("ESL", rownames(pcoa_result$vectors)), type_colors[3], "black"))) # "black" as a default, just in case
points(pcoa_result$vectors[,1], pcoa_result$vectors[,2], pch = 21, bg = colors, cex = 1.6)
# Add a legend with circle markers
legend("topright",
legend = c("Small", "Large", "DeFr", "Whole"),
col = type_colors,
pt.bg = type_colors,  # fill color
pch = 21,
cex = 1.6)
dev.off()
# Let's do the PERMANOVA
dist_matrix_rownames <- labels(dist_matrix)
group_labels <- ifelse(grepl("ES$", dist_matrix_rownames), "Small",
ifelse(grepl("EL", dist_matrix_rownames), "Large",
ifelse(grepl("ESL", dist_matrix_rownames), "DeFr", "Whole")))
permanova_result <- adonis2(as.matrix(dist_matrix) ~ group_labels,
permutations = 999)
print(permanova_result)
# Make sure the labels are in a data frame
df_group_labels <- data.frame(group_labels)
# Run pairwise tests
posthoc_results <- pairwise.adonis(dist_matrix, df_group_labels$group_label, p.adjust.m = 'fdr')
print(posthoc_results)
directory = "~/Documents/escuela/phd/size_fractions/"
infile = "distance_matrix_30m18s.tsv"
outfile = "PCoA-plt30m18s.png"
# Load the distance matrix
# Assuming the distance matrix is saved in a file named "distance_matrix.tsv"
matrix_data <- read.table(paste(directory,infile,sep = ""), header = TRUE, sep = "\t", row.names = 1, check.names = FALSE)
# Convert the matrix data to a 'dist' object
dist_matrix <- as.dist(matrix_data)
# Perform a Principal Coordinates Analysis (PCoA)
pcoa_result <- pcoa(dist_matrix)
# Compute variance percentages
total_variance <- sum(pcoa_result$values$Eigenvalues)
var1 <- round((pcoa_result$values$Eigenvalues[1] / total_variance) * 100, 2)
var2 <- round((pcoa_result$values$Eigenvalues[2] / total_variance) * 100, 2)
xvalues <- seq(from = floor(min(pcoa_result$vectors[,1])),
to = ceiling(max(pcoa_result$vectors[,1])),
by = 0.2)
yvalues <- seq(from = floor(min(pcoa_result$vectors[,2])),
to = ceiling(max(pcoa_result$vectors[,2])),
by = 0.2)
png(filename = paste(directory,outfile,".png",sep=""))
old_mar <- par("mar")
par(mar = c(old_mar[1], 6, old_mar[3], old_mar[4]))  # Increase the left margin
# Plot the first two PCoA axes with modified settings
plot(pcoa_result$vectors[,1], pcoa_result$vectors[,2],
xlab = paste("PCo1 (", var1, "%)", sep = ""),
ylab = paste("PCo2 (", var2, "%)", sep = ""),
type = "n", # Set up the plotting area
cex.lab = 1.8,
cex.axis = 1.4,
xaxp = c(floor(min(pcoa_result$vectors[,1])), ceiling(max(pcoa_result$vectors[,1])),
(ceiling(max(pcoa_result$vectors[,1])) - floor(min(pcoa_result$vectors[,1]))) / 0.2),
yaxp = c(floor(min(pcoa_result$vectors[,2])), ceiling(max(pcoa_result$vectors[,2])),
(ceiling(max(pcoa_result$vectors[,2])) - floor(min(pcoa_result$vectors[,2]))) / 0.2))
# Add gridlines
abline(h = yvalues, col = "gray", lty = "dotted")
abline(v = xvalues, col = "gray", lty = "dotted")
type_colors = c("#4477AA","#EE7733","#BBBBBB", "black")
# Add points based on the ending character of labels
colors <- ifelse(grepl("ES$", rownames(pcoa_result$vectors)), type_colors[1],
ifelse(grepl("EL$", rownames(pcoa_result$vectors)), type_colors[2],
ifelse(grepl("ESL", rownames(pcoa_result$vectors)), type_colors[3], "black"))) # "black" as a default, just in case
points(pcoa_result$vectors[,1], pcoa_result$vectors[,2], pch = 21, bg = colors, cex = 1.6)
# Add a legend with circle markers
legend("topright",
legend = c("Small", "Large", "DeFr", "Whole"),
col = type_colors,
pt.bg = type_colors,  # fill color
pch = 21,
cex = 1.6)
dev.off()
# Let's do the PERMANOVA
dist_matrix_rownames <- labels(dist_matrix)
group_labels <- ifelse(grepl("ES$", dist_matrix_rownames), "Small",
ifelse(grepl("EL", dist_matrix_rownames), "Large",
ifelse(grepl("ESL", dist_matrix_rownames), "DeFr", "Whole")))
permanova_result <- adonis2(as.matrix(dist_matrix) ~ group_labels,
permutations = 999)
print(permanova_result)
# Make sure the labels are in a data frame
df_group_labels <- data.frame(group_labels)
# Run pairwise tests
posthoc_results <- pairwise.adonis(dist_matrix, df_group_labels$group_label, p.adjust.m = 'fdr')
print(posthoc_results)
directory = "~/Documents/escuela/phd/size_fractions/"
infile = "distance_matrix_60m18s.tsv"
outfile = "PCoA-plt60m18s.png"
# Load the distance matrix
# Assuming the distance matrix is saved in a file named "distance_matrix.tsv"
matrix_data <- read.table(paste(directory,infile,sep = ""), header = TRUE, sep = "\t", row.names = 1, check.names = FALSE)
# Convert the matrix data to a 'dist' object
dist_matrix <- as.dist(matrix_data)
# Perform a Principal Coordinates Analysis (PCoA)
pcoa_result <- pcoa(dist_matrix)
# Compute variance percentages
total_variance <- sum(pcoa_result$values$Eigenvalues)
var1 <- round((pcoa_result$values$Eigenvalues[1] / total_variance) * 100, 2)
var2 <- round((pcoa_result$values$Eigenvalues[2] / total_variance) * 100, 2)
xvalues <- seq(from = floor(min(pcoa_result$vectors[,1])),
to = ceiling(max(pcoa_result$vectors[,1])),
by = 0.2)
yvalues <- seq(from = floor(min(pcoa_result$vectors[,2])),
to = ceiling(max(pcoa_result$vectors[,2])),
by = 0.2)
png(filename = paste(directory,outfile,".png",sep=""))
old_mar <- par("mar")
par(mar = c(old_mar[1], 6, old_mar[3], old_mar[4]))  # Increase the left margin
# Plot the first two PCoA axes with modified settings
plot(pcoa_result$vectors[,1], pcoa_result$vectors[,2],
xlab = paste("PCo1 (", var1, "%)", sep = ""),
ylab = paste("PCo2 (", var2, "%)", sep = ""),
type = "n", # Set up the plotting area
cex.lab = 1.8,
cex.axis = 1.4,
xaxp = c(floor(min(pcoa_result$vectors[,1])), ceiling(max(pcoa_result$vectors[,1])),
(ceiling(max(pcoa_result$vectors[,1])) - floor(min(pcoa_result$vectors[,1]))) / 0.2),
yaxp = c(floor(min(pcoa_result$vectors[,2])), ceiling(max(pcoa_result$vectors[,2])),
(ceiling(max(pcoa_result$vectors[,2])) - floor(min(pcoa_result$vectors[,2]))) / 0.2))
# Add gridlines
abline(h = yvalues, col = "gray", lty = "dotted")
abline(v = xvalues, col = "gray", lty = "dotted")
type_colors = c("#4477AA","#EE7733","#BBBBBB", "black")
# Add points based on the ending character of labels
colors <- ifelse(grepl("DS$", rownames(pcoa_result$vectors)), type_colors[1],
ifelse(grepl("DL$", rownames(pcoa_result$vectors)), type_colors[2],
ifelse(grepl("DSL", rownames(pcoa_result$vectors)), type_colors[3], "black"))) # "black" as a default, just in case
points(pcoa_result$vectors[,1], pcoa_result$vectors[,2], pch = 21, bg = colors, cex = 1.6)
# Add a legend with circle markers
legend("topright",
legend = c("Small", "Large", "DeFr", "Whole"),
col = type_colors,
pt.bg = type_colors,  # fill color
pch = 21,
cex = 1.6)
dev.off()
# Let's do the PERMANOVA
dist_matrix_rownames <- labels(dist_matrix)
group_labels <- ifelse(grepl("DS$", dist_matrix_rownames), "Small",
ifelse(grepl("DL", dist_matrix_rownames), "Large",
ifelse(grepl("DSL", dist_matrix_rownames), "DeFr", "Whole")))
permanova_result <- adonis2(as.matrix(dist_matrix) ~ group_labels,
permutations = 999)
print(permanova_result)
# Make sure the labels are in a data frame
df_group_labels <- data.frame(group_labels)
# Run pairwise tests
posthoc_results <- pairwise.adonis(dist_matrix, df_group_labels$group_label, p.adjust.m = 'fdr')
print(posthoc_results)
directory = "~/Documents/escuela/phd/size_fractions/"
infile = "distance_matrix_60m16s.tsv"
outfile = "PCoA-plt60m16s.png"
# Load the distance matrix
# Assuming the distance matrix is saved in a file named "distance_matrix.tsv"
matrix_data <- read.table(paste(directory,infile,sep = ""), header = TRUE, sep = "\t", row.names = 1, check.names = FALSE)
# Convert the matrix data to a 'dist' object
dist_matrix <- as.dist(matrix_data)
# Perform a Principal Coordinates Analysis (PCoA)
pcoa_result <- pcoa(dist_matrix)
# Compute variance percentages
total_variance <- sum(pcoa_result$values$Eigenvalues)
var1 <- round((pcoa_result$values$Eigenvalues[1] / total_variance) * 100, 2)
var2 <- round((pcoa_result$values$Eigenvalues[2] / total_variance) * 100, 2)
xvalues <- seq(from = floor(min(pcoa_result$vectors[,1])),
to = ceiling(max(pcoa_result$vectors[,1])),
by = 0.2)
yvalues <- seq(from = floor(min(pcoa_result$vectors[,2])),
to = ceiling(max(pcoa_result$vectors[,2])),
by = 0.2)
png(filename = paste(directory,outfile,".png",sep=""))
old_mar <- par("mar")
par(mar = c(old_mar[1], 6, old_mar[3], old_mar[4]))  # Increase the left margin
# Plot the first two PCoA axes with modified settings
plot(pcoa_result$vectors[,1], pcoa_result$vectors[,2],
xlab = paste("PCo1 (", var1, "%)", sep = ""),
ylab = paste("PCo2 (", var2, "%)", sep = ""),
type = "n", # Set up the plotting area
cex.lab = 1.8,
cex.axis = 1.4,
xaxp = c(floor(min(pcoa_result$vectors[,1])), ceiling(max(pcoa_result$vectors[,1])),
(ceiling(max(pcoa_result$vectors[,1])) - floor(min(pcoa_result$vectors[,1]))) / 0.2),
yaxp = c(floor(min(pcoa_result$vectors[,2])), ceiling(max(pcoa_result$vectors[,2])),
(ceiling(max(pcoa_result$vectors[,2])) - floor(min(pcoa_result$vectors[,2]))) / 0.2))
# Add gridlines
abline(h = yvalues, col = "gray", lty = "dotted")
abline(v = xvalues, col = "gray", lty = "dotted")
type_colors = c("#4477AA","#EE7733","#BBBBBB", "black")
# Add points based on the ending character of labels
colors <- ifelse(grepl("DS$", rownames(pcoa_result$vectors)), type_colors[1],
ifelse(grepl("DL$", rownames(pcoa_result$vectors)), type_colors[2],
ifelse(grepl("DSL", rownames(pcoa_result$vectors)), type_colors[3], "black"))) # "black" as a default, just in case
points(pcoa_result$vectors[,1], pcoa_result$vectors[,2], pch = 21, bg = colors, cex = 1.6)
# Add a legend with circle markers
legend("topright",
legend = c("Small", "Large", "DeFr", "Whole"),
col = type_colors,
pt.bg = type_colors,  # fill color
pch = 21,
cex = 1.6)
dev.off()
# Let's do the PERMANOVA
dist_matrix_rownames <- labels(dist_matrix)
group_labels <- ifelse(grepl("DS$", dist_matrix_rownames), "Small",
ifelse(grepl("DL", dist_matrix_rownames), "Large",
ifelse(grepl("DSL", dist_matrix_rownames), "DeFr", "Whole")))
permanova_result <- adonis2(as.matrix(dist_matrix) ~ group_labels,
permutations = 999)
print(permanova_result)
# Make sure the labels are in a data frame
df_group_labels <- data.frame(group_labels)
# Run pairwise tests
posthoc_results <- pairwise.adonis(dist_matrix, df_group_labels$group_label, p.adjust.m = 'fdr')
print(posthoc_results)
